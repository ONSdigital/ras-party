---
swagger: "2.0"
info:
  description: "Initial API for the Party microservice."
  version: "1.0.4"
  title: "Party API"
  contact:
    email: "ras@ons.gov.uk"
host: "localhost:8083\n"
basePath: "/party-api/1.0.4"
tags:
- name: "backstage"
  description: "Operations available to internal business roles (i.e. Respondent Liason,\
    \ Survey Manager)"
- name: "frontstage"
  description: "Operations available to external business roles (i.e. Respondent)"
- name: "future"
  description: "Operations to support future requirements (i.e. Census)"
schemes:
- "https"
security:
- accessCode:
  - "read"
paths:
  /parties:
    post:
      tags:
      - "backstage"
      summary: "given a sampleUnitType B | H this adds a reporting unit of type Business\
        \ or Household"
      description: "Adds a new Party of type sampleUnitType or updates an existing\
        \ Party based on the reference provided"
      operationId: "parties_post"
      consumes:
      - "application/vnd.ons.party+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Party to add"
        required: false
        schema:
          $ref: "#/definitions/createparty"
      responses:
        200:
          description: "item updated"
          headers:
            ETag:
              type: "string"
              description: "On successful update, the new ETag for the Party will\
                \ be included as a header, e.g. \"5635635636356356\""
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Party will\
                \ be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
          schema:
            $ref: "#/definitions/error"
        422:
          description: "an existing item already exists"
          schema:
            $ref: "#/definitions/error"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /parties/type/{sampleUnitType}/ref/{sampleUnitRef}:
    get:
      tags:
      - "backstage"
      summary: "Get a Party and any associated parties by its unique reference (ruref\
        \ for business, uprn for household)"
      description: "Returns a Party and associated parties"
      operationId: "get_party_by_ref"
      produces:
      - "application/vnd.ons.party+json"
      parameters:
      - name: "sampleUnitType"
        in: "path"
        description: "Sample Unit Type [ B BI I H ]"
        required: true
        type: "string"
      - name: "sampleUnitRef"
        in: "path"
        description: "Reference of the Party to return e.g. ruref for business, uprn\
          \ for household"
        required: true
        type: "string"
      responses:
        200:
          description: "Party representation"
          schema:
            $ref: "#/definitions/party"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/error"
        403:
          description: "Forbidden - in the context of frontstage use, this response\
            \ would indicate the Respondent does not have an ACTIVE association with\
            \ this business"
          schema:
            $ref: "#/definitions/error"
        404:
          description: "Business not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /parties/type/{sampleUnitType}/id/{id}:
    get:
      tags:
      - "backstage"
      summary: "Get a Party by its UUID"
      description: "Returns a single Party"
      operationId: "get_party_by_id"
      produces:
      - "application/vnd.ons.party+json"
      parameters:
      - name: "sampleUnitType"
        in: "path"
        description: "Sample Unit Type [ B BI I H ]"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of the Party to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Party representation"
          schema:
            $ref: "#/definitions/party"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/error"
        403:
          description: "Forbidden - in the context of frontstage use, this response\
            \ would indicate the Respondent does not have an ACTIVE association with\
            \ this business"
          schema:
            $ref: "#/definitions/error"
        404:
          description: "Business not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /businesses/ref/{ref}:
    get:
      tags:
      - "frontstage"
      - "backstage"
      summary: "Get a Business by its unique business reference"
      description: "Returns a single Business"
      operationId: "get_business_by_ref"
      produces:
      - "application/vnd.ons.business+json"
      parameters:
      - name: "ref"
        in: "path"
        description: "Reference of the Business to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Business representation"
          schema:
            $ref: "#/definitions/business"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/error"
        403:
          description: "Forbidden - in the context of frontstage use, this response\
            \ would indicate the Respondent does not have an ACTIVE association with\
            \ this business"
          schema:
            $ref: "#/definitions/error"
        404:
          description: "Business not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
  /respondents/id/{id}/business-associations:
    get:
      tags:
      - "backstage"
      summary: "Returns the known business associations for a respondent"
      description: "Returns the known business associations for a respondent"
      operationId: "respondents_id_id_business_associations_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Respondent"
        required: true
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "Paginated list of known business associations for a respondent"
        404:
          description: "Respondent not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /businesses/id/{id}/business-associations:
    get:
      tags:
      - "backstage"
      summary: "Returns the known business associations for a business"
      description: "Returns the known business associations for a business"
      operationId: "businesses_id_id_business_associations_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Business to return"
        required: true
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "Paginated list of known business associations for a business"
        404:
          description: "Business not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /businesses/id/{id}:
    get:
      tags:
      - "frontstage"
      - "backstage"
      summary: "Get a Business by its Party ID"
      description: "Returns a single Party"
      operationId: "get_business_by_id"
      produces:
      - "application/vnd.ons.business+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Party to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Party representation"
          schema:
            $ref: "#/definitions/business"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/error"
        404:
          description: "Party not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
    put:
      tags:
      - "backstage"
      summary: "Update the representation for an existing Business"
      description: "Updates the representation for an existing Business"
      operationId: "businesses_id_id_put"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Party to update"
        required: true
        type: "string"
      - name: "binaryparty"
        in: "formData"
        description: "Binary Party to add"
        required: true
        type: "file"
      - name: "ETag"
        in: "header"
        description: "The current ETag value for the Party"
        required: false
        type: "string"
      responses:
        201:
          description: "item updated"
          headers:
            ETag:
              type: "string"
              description: "On successful update, the new ETag for the Party will\
                \ be included as a header, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/error"
        409:
          description: "Invalid ETag supplied"
          schema:
            $ref: "#/definitions/error"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
    options:
      tags:
      - "frontstage"
      - "backstage"
      summary: "View the available representations for a given Business"
      operationId: "businesses_id_id_options"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Business to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Collection of available representations for a Business"
          schema:
            $ref: "#/definitions/vnd.collection+json"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden - in the context of frontstage use, this response\
            \ would indicate the Respondent does not have an ACTIVE association with\
            \ this business"
        404:
          description: "Business not found"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
  /businesses:
    get:
      tags:
      - "frontstage"
      - "backstage"
      summary: "searches Businesses"
      description: "By passing in the appropriate options, you can search for available\
        \ Businesses\n"
      operationId: "businesses_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up Businesses"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "Search results matching criteria. For frontstage use, the\
            \ response will be filtered based on the ACTIVE business associations\
            \ for the Respondent"
        400:
          description: "Bad input parameter"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
    post:
      tags:
      - "backstage"
      summary: "adds a reporting unit of type Business"
      description: "Adds a new Business, or updates an existing Business based on\
        \ the business reference provided"
      operationId: "businesses_post"
      consumes:
      - "application/vnd.ons.business+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Business to add"
        required: false
        schema:
          $ref: "#/definitions/party"
      responses:
        200:
          description: "item updated"
          headers:
            ETag:
              type: "string"
              description: "On successful update, the new ETag for the Business will\
                \ be included as a header, e.g. \"5635635636356356\""
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Business\
                \ will be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
          schema:
            $ref: "#/definitions/error"
        422:
          description: "an existing item already exists"
          schema:
            $ref: "#/definitions/error"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /respondents/id/{id}:
    get:
      tags:
      - "backstage"
      summary: "Get a Respondent by its Party ID"
      description: "Returns a single Party"
      operationId: "get_respondent_by_id"
      produces:
      - "application/vnd.ons.respondent+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Respondent to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Respondent representation"
          schema:
            $ref: "#/definitions/respondent"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Respondent, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/error"
        404:
          description: "Party not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
    put:
      tags:
      - "frontstage"
      - "backstage"
      summary: "Update the representation for an existing Respondent."
      description: "Updates the representation for an existing Respondent. To be used\
        \ to activate a Respondent when their email address has been confirmed."
      operationId: "respondents_id_id_put"
      consumes:
      - "application/vnd.ons.respondent+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Respondent to update"
        required: true
        type: "string"
      - name: "ETag"
        in: "header"
        description: "The current ETag value for the Respondent"
        required: false
        type: "string"
      responses:
        200:
          description: "item updated"
          headers:
            ETag:
              type: "string"
              description: "On successful update, the new ETag for the Party will\
                \ be included as a header, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
        403:
          description: "Forbidden - in the context of frontstage use, this response\
            \ would indicate the Respondent does not match the currently authenticated\
            \ user"
          schema:
            $ref: "#/definitions/error"
        409:
          description: "Invalid ETag supplied"
          schema:
            $ref: "#/definitions/error"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
    options:
      tags:
      - "backstage"
      summary: "View the available representations for a given Respondent"
      operationId: "respondents_id_id_options"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Respondent to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Collection of available representations for a Respondent"
          schema:
            $ref: "#/definitions/vnd.collection+json"
        404:
          description: "Respondent not found"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
  /respondents:
    get:
      tags:
      - "backstage"
      summary: "searches Respondents"
      description: "By passing in the appropriate options, you can search for available\
        \ Respondentes\n"
      operationId: "respondents_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up Respondents"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
        400:
          description: "bad input parameter"
          schema:
            $ref: "#/definitions/error"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
    post:
      tags:
      - "frontstage"
      - "backstage"
      summary: "adds a Respondent"
      description: "Adds a Respondent to the system"
      operationId: "respondents_post"
      consumes:
      - "application/vnd.ons.respondent+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Respondent to add"
        required: false
        schema:
          $ref: "#/definitions/respondent"
      responses:
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Respondent\
                \ will be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
          schema:
            $ref: "#/definitions/error"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
  /residences/uprn/{uprn}:
    get:
      tags:
      - "future"
      summary: "Get a Residence by its unique property reference"
      description: "Returns a single Residence"
      operationId: "get_residence_by_uprn"
      produces:
      - "application/vnd.ons.party+json"
      parameters:
      - name: "uprn"
        in: "path"
        description: "Unique property reference of the Residence to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Residence representation"
          schema:
            $ref: "#/definitions/residence"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        400:
          description: "Invalid Ref supplied"
        404:
          description: "Residence not found"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
  /residences/id/{id}:
    get:
      tags:
      - "future"
      summary: "Get a Residence by its Party ID"
      description: "Returns a single Party"
      operationId: "get_residence_by_id"
      produces:
      - "application/vnd.ons.party+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Party to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Party representation"
          schema:
            $ref: "#/definitions/residence"
          headers:
            ETag:
              type: "string"
              description: "The current ETag for the Party, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
        404:
          description: "Party not found"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
    put:
      tags:
      - "future"
      summary: "Update the representation for an existing Residence"
      description: "Updates the representation for an existing Residence"
      operationId: "residences_id_id_put"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Party to update"
        required: true
        type: "string"
      - name: "binaryparty"
        in: "formData"
        description: "Binary Party to add"
        required: true
        type: "file"
      - name: "ETag"
        in: "header"
        description: "The current ETag value for the Party"
        required: false
        type: "string"
      responses:
        201:
          description: "item updated"
          headers:
            ETag:
              type: "string"
              description: "On successful update, the new ETag for the Party will\
                \ be included as a header, e.g. \"5635635636356356\""
        400:
          description: "Invalid ID supplied"
        409:
          description: "Invalid ETag supplied"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
    options:
      tags:
      - "future"
      summary: "View the available representations for a given Residence"
      operationId: "residences_id_id_options"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of Residence to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Collection of available representations for a Residence"
          schema:
            $ref: "#/definitions/vnd.collection+json"
        404:
          description: "Residence not found"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
  /residences:
    get:
      tags:
      - "future"
      summary: "searches Residences"
      description: "By passing in the appropriate options, you can search for available\
        \ Residences\n"
      operationId: "residences_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up Residences"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
    post:
      tags:
      - "future"
      summary: "adds a reporting unit of type Residence"
      description: "Adds a Residence to the system"
      operationId: "residences_post"
      consumes:
      - "application/vnd.ons.party+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Residence to add"
        required: false
        schema:
          $ref: "#/definitions/residence"
      responses:
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Residence\
                \ will be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.future_controller"
  /enrolment-codes:
    get:
      tags:
      - "backstage"
      summary: "searches enrolment codes"
      description: "By passing in the appropriate options, you can search for available\
        \ Enrolment Codes\n"
      operationId: "enrolment_codes_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up Enrolment Codes"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
    post:
      tags:
      - "frontstage"
      summary: "redeems an Enrolment Code"
      description: "Redeems an Enrolment Code"
      operationId: "enrolment_codes_post"
      consumes:
      - "application/vnd.ons.enrolment-code+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Enrolment Code to redeem"
        required: false
        schema:
          $ref: "#/definitions/enrolmentCode"
      responses:
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Enrolment\
                \ Code will be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
        422:
          description: "enrolment code already exists"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
  /enrolment-invitations:
    get:
      tags:
      - "backstage"
      summary: "searches enrolment invitations"
      description: "By passing in the appropriate options, you can search for available\
        \ Enrolment Invitations\n"
      operationId: "enrolment_invitations_get"
      produces:
      - "application/vnd.collection+json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up Enrolment Invitations"
        required: false
        type: "string"
      - name: "skip"
        in: "query"
        description: "number of records to skip for pagination"
        required: false
        type: "integer"
        minimum: 0
        format: "int32"
      - name: "limit"
        in: "query"
        description: "maximum number of records to return"
        required: false
        type: "integer"
        maximum: 50
        minimum: 0
        format: "int32"
      responses:
        200:
          description: "search results matching criteria"
        400:
          description: "bad input parameter"
      x-swagger-router-controller: "swagger_server.controllers.backstage_controller"
    post:
      tags:
      - "frontstage"
      summary: "stores an invitation to Enrol another Respondent to a Survey"
      description: "Stores an invitation to Enrol another Respondent to a Survey"
      operationId: "enrolment_invitations_post"
      consumes:
      - "application/vnd.ons.enrolment-invitation+json"
      parameters:
      - in: "body"
        name: "party"
        description: "Enrolment Invitation to store"
        required: false
        schema:
          $ref: "#/definitions/enrolmentInvitation"
      responses:
        201:
          description: "item created"
          headers:
            Location:
              type: "string"
              description: "Location of the newly created resource"
            ETag:
              type: "string"
              description: "On successful creation, the new ETag for the Enrolment\
                \ Invitation will be included as a header, e.g. \"5635635636356356\""
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"
      security:
      - accessCode:
        - "write"
      x-swagger-router-controller: "swagger_server.controllers.frontstage_controller"
securityDefinitions:
  accessCode:
    type: "oauth2"
    authorizationUrl: "http://uaa.ons.gov.uk/oauth/auth"
    tokenUrl: "http://uaa.ons.gov.uk/oauth/token"
    flow: "accessCode"
    scopes:
      write: "allows modifying resources"
      read: "allows reading resources"
definitions:
  vnd.collection+json:
    type: "object"
    properties:
      version:
        type: "string"
        example: "1.0"
      href:
        type: "string"
        example: "/party/id/12345678"
      links:
        type: "array"
        items:
          $ref: "#/definitions/vnd.collectionjson_links"
  address:
    type: "object"
    properties:
      saon:
        type: "string"
        example: "Office 2a"
        description: "The Secondary Addressable Object - this is usually something\
          \ like a flat number or any other sub unit"
      paon:
        type: "string"
        example: "Unit 5"
        description: "The Primary Addressable Object - this is usually a house number\
          \ or a building name"
      street:
        type: "string"
        example: "Milton Street"
        description: "The street where the building office resides"
      locality:
        type: "string"
        example: "Green Industrial Park"
        description: "Sometimes, an address is associated with a locality, which identifies\
          \ the address with a smaller geographical area than the Post Town (see town)"
      town:
        type: "string"
        example: "New Town"
        description: "This is the Post Town where the address is located. This usually\
          \ corresponds to the sorting office that handles the mail for the address,\
          \ as may take in many smaller towns, urban districts and villages (see locality)."
      postcode:
        type: "string"
        example: "NT23 7TN"
        description: "This is the Postcode for the address. Currently a postcode is\
          \ needed for Sorting Office to begin parsing the address."
  createparty:
    type: "object"
    properties:
      sampleUnitType:
        type: "string"
        example: "B"
        description: "Sample Unit Type [ B BI | H ]"
      reference:
        type: "string"
        example: "49900001234"
        description: "The reference of the sample unit ( <RUREF> | <URPN> )"
      id:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
        description: "The id of the Party. This will not be required when posting"
      attributes:
        $ref: "#/definitions/attributes"
  party:
    type: "object"
    properties:
      sampleUnitType:
        type: "string"
        example: "B"
        description: "Sample Unit Type [ B BI | H ]"
      reference:
        type: "string"
        example: "49900001234"
        description: "The reference of the sample unit ( <RUREF> | <URPN> )"
      id:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
        description: "The id of the Party. This will not be required when posting"
      attributes:
        $ref: "#/definitions/attributes"
      associations:
        type: "array"
        items:
          $ref: "#/definitions/partysummary"
  partysummary:
    type: "object"
    properties:
      sampleUnitType:
        type: "string"
        example: "BI"
        description: "Sample Unit Type [ B BI | H ]"
      id:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
        description: "The id of the Party. This will not be required when posting"
  attributes:
    type: "object"
    description: "A dictionary of kv pairs from the sample file."
    additionalProperties:
      type: "string"
      example: "ACME LTD"
  business:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
      address:
        $ref: "#/definitions/address"
      contactName:
        type: "string"
        example: "John Doe"
      employeeCount:
        type: "integer"
        example: 50
      enterpriseName:
        type: "string"
        example: "ABC Limited"
      facsimile:
        type: "string"
        example: "+44 1234 567890"
      fulltimeCount:
        type: "integer"
        example: 35
      legalStatus:
        type: "string"
        example: "Private Limited Company"
        enum:
        - "Community Interest Company (CIC)"
        - "Charitable Incorporated Organisation (CIO)"
        - "Industrial and provident society"
        - "General partnership"
        - "Limited liability partnership (LLP)"
        - "Limited partnership (LP)"
        - "Private Limited Company"
        - "Public Limited Company"
        - "Unlimited Company"
        - "Sole proprietorship"
      name:
        type: "string"
        example: "ABC Limited"
      businessRef:
        type: "string"
        example: "0123456789"
        description: "The unique business identifier recognised within ONS (previously\
          \ referred to as the RU Ref)."
      sic2003:
        type: "string"
        example: "2520"
      sic2007:
        type: "string"
        example: "2520"
      telephone:
        type: "string"
        example: "+44 1234 567890"
      tradingName:
        type: "string"
        example: "ABC Trading Ltd"
      turnover:
        type: "integer"
        example: 350
  respondent:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
      emailAddress:
        type: "string"
        format: "email"
        example: "john.doe@abc-ltd.com"
      firstName:
        type: "string"
        example: "John"
      lastName:
        type: "string"
        example: "Doe"
      telephone:
        type: "string"
        example: "+44 1234 567890"
      status:
        type: "string"
        example: "ACTIVE"
        enum:
        - "CREATED"
        - "ACTIVE"
        - "SUSPENDED"
  businessAssociation:
    type: "object"
    properties:
      effectiveFrom:
        type: "string"
        format: "date-time"
        example: "2010-11-17T00:00:00Z"
      effectiveTo:
        type: "string"
        format: "date-time"
        example: ""
      businessId:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
      respondentId:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
      status:
        type: "string"
        example: "ACTIVE"
        enum:
        - "ACTIVE"
        - "INACTIVE"
        - "SUSPENDED"
        - "ENDED"
      enrolments:
        type: "array"
        items:
          $ref: "#/definitions/enrolment"
  enrolment:
    type: "object"
    properties:
      surveyId:
        type: "string"
        format: "uuid"
        example: "45297c23-763d-46a9-b4e5-c37ff5b4fbe7"
      status:
        type: "string"
        example: "ENABLED"
        enum:
        - "PENDING"
        - "ENABLED"
        - "DISABLED"
        - "SUSPENDED"
  enrolmentCode:
    type: "object"
    properties:
      code:
        type: "string"
        example: "7689-4537-1928-4536"
  enrolmentInvitation:
    type: "object"
    properties:
      targetEmail:
        type: "string"
        format: "email"
        example: "jane.doe@abc-ltd.com"
      effectiveFrom:
        type: "string"
        format: "date-time"
        example: "2017-03-29T09:15:00Z"
      effectiveTo:
        type: "string"
        format: "date-time"
        example: "2017-03-31T09:15:00Z"
  residence:
    type: "object"
    properties:
      uprn:
        type: "integer"
        description: "Unique Property Reference Number."
      category:
        type: "string"
        description: "only if care home or hotel"
        enum:
        - "HOTEL"
        - "CARE HOME"
      type:
        type: "string"
        description: "Address type CE, HH, I."
      estabType:
        type: "string"
        description: "Communal Establishment type."
      addressLine1:
        type: "string"
        description: "Address details."
      addressLine2:
        type: "string"
        description: "Address details."
      townName:
        type: "string"
        description: "Postal town name."
      postcode:
        type: "string"
        description: "Postal Code."
      outputArea:
        type: "string"
        description: "Geography Output Area code."
      lsoaArea:
        type: "string"
        description: "Lower Layer Super Output Area code."
      msoaArea:
        type: "string"
        description: "Middle layer Super Output Area code."
      ladCode:
        type: "string"
        description: "GSS nine character LAD code."
      regionCode:
        type: "string"
        description: "GSS nine character Region geography code."
      eastings:
        type: "integer"
        description: "Easting or x-coordinate."
      northings:
        type: "integer"
        description: "Northing or y-coordinate."
      htc:
        type: "integer"
        description: "Hard to count code."
      latitude:
        type: "number"
        description: "Position North or South of Equator."
      longitude:
        type: "number"
        description: "Position East or West of Greenwich Meridian."
  error:
    type: "object"
    properties:
      logref:
        type: "string"
        example: "31317c23-763d-46a9-b4e5-c37ff5b4fbe7"
        description: "A unique identifier generated per error"
      message:
        type: "string"
        example: "An error has occurred"
        description: "Description of the error that occurred"
  vnd.collectionjson_links:
    properties:
      rel:
        type: "string"
        example: "self"
      href:
        type: "string"
        example: "/party/id/12345678"
      type:
        type: "string"
        example: "application/vnd.ons.party+json"
