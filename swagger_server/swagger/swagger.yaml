basePath: /party-api/v1
definitions:
  attributes: {description: A dictionary of kv pairs from the sample file., type: object}
  business:
    properties:
      attributes: {$ref: '#/definitions/attributes'}
      businessRef: {description: The unique business identifier recognised within
          ONS (previously referred to as the RU Ref)., example: 0123456789, type: string}
      contactName: {example: John Doe, type: string}
      employeeCount: {example: 50, type: integer}
      enterpriseName: {example: ABC Limited, type: string}
      facsimile: {example: +44 1234 567890, type: string}
      fulltimeCount: {example: 35, type: integer}
      id: {example: 3b136c4b-7a14-4904-9e01-13364dd7b972, format: uuid, type: string}
      legalStatus:
        enum: [Community Interest Company (CIC), Charitable Incorporated Organisation
            (CIO), Industrial and provident society, General partnership, Limited
            liability partnership (LLP), Limited partnership (LP), Private Limited
            Company, Public Limited Company, Unlimited Company, Sole proprietorship]
        example: Private Limited Company
        type: string
      name: {example: ABC Limited, type: string}
      sic2003: {example: '2520', type: string}
      sic2007: {example: '2520', type: string}
      telephone: {example: +44 1234 567890, type: string}
      tradingName: {example: ABC Trading Ltd, type: string}
      turnover: {example: 350, type: integer}
    type: object
  businessCreate:
    properties:
      attributes:
        properties: {}
        type: object
      businessRef: {description: The unique business identifier recognised within
          ONS (previously referred to as the RU Ref)., example: 0123456789, type: string}
      id: {example: 3b136c4b-7a14-4904-9e01-13364dd7b972, format: uuid, type: string}
    type: object
  error:
    properties:
      logref: {description: A unique identifier generated per error, example: 31317c23-763d-46a9-b4e5-c37ff5b4fbe7,
        type: string}
      message: {description: Description of the error that occurred, example: An error
          has occurred, type: string}
    type: object
  party:
    properties:
      attributes: {$ref: '#/definitions/attributes'}
      id: {description: The id of the Party. This will not be required when posting,
        example: 'urn:ons.gov.uk:id:business:00123456789', format: urn, type: string}
      reference: {description: The reference of the sample unit ( <RUREF> | <URPN>
          ), example: '49900001234', type: string}
      sampleUnitType: {description: 'Sample Unit Type [ B | H ]', example: B, type: string}
    type: object
  respondent:
    properties:
      emailAddress: {example: john.doe@abc-ltd.com, format: email, type: string}
      firstName: {example: John, type: string}
      id: {example: 3b136c4b-7a14-4904-9e01-13364dd7b972, format: uuid, type: string}
      lastName: {example: Doe, type: string}
      status:
        enum: [CREATED, ACTIVE, SUSPENDED]
        example: ACTIVE
        type: string
      telephone: {example: +44 1234 567890, type: string}
    type: object
  vnd.collection+json:
    properties:
      href: {example: /party/id/12345678, type: string}
      links:
        items: {$ref: '#/definitions/vnd.collectionjson_links'}
        type: array
      version: {example: '1.0', type: string}
    type: object
  vnd.collectionjson_links:
    properties:
      href: {example: /party/id/12345678, type: string}
      rel: {example: self, type: string}
      type: {example: application/vnd.ons.party+json, type: string}
host: localhost:8000
info:
  contact: {email: ras@ons.gov.uk}
  description: Initial API for the Party microservice.
  title: Party API
  version: 1.0.0
paths:
  /businesses:
    post:
      consumes: [application/vnd.ons.business+json]
      description: Adds a new Business, or updates an existing Business based on the
        business reference provided
      operationId: businesses_post
      parameters:
      - description: Business to add
        in: body
        name: business
        required: false
        schema:
          allOf:
          - {$ref: '#/definitions/businessCreate'}
      responses:
        200: {description: item updated}
        201:
          description: item created
          headers:
            Location: {description: Location of the newly created resource, type: string}
        400:
          description: invalid input, object invalid
          schema: {$ref: '#/definitions/error'}
        422:
          description: an existing item already exists
          schema: {$ref: '#/definitions/error'}
      summary: adds a reporting unit of type Business
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /businesses/id/{id}:
    get:
      description: Returns a single Party
      operationId: get_business_by_id
      parameters:
      - {description: ID of Party to return, in: path, name: id, required: true, type: string}
      produces: [application/vnd.ons.business+json]
      responses:
        200:
          description: Party representation
          schema: {$ref: '#/definitions/business'}
        400:
          description: Invalid ID supplied
          schema: {$ref: '#/definitions/error'}
        404:
          description: Party not found
          schema: {$ref: '#/definitions/error'}
      summary: Get a Business by its Party ID
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /businesses/ref/{ref}:
    get:
      description: Returns a single Business
      operationId: get_business_by_ref
      parameters:
      - {description: Reference of the Business to return, in: path, name: ref, required: true,
        type: string}
      produces: [application/vnd.ons.business+json]
      responses:
        200:
          description: Business representation
          schema: {$ref: '#/definitions/business'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/error'}
        403:
          description: Forbidden - in the context of frontstage use, this response
            would indicate the Respondent does not have an ACTIVE association with
            this business
          schema: {$ref: '#/definitions/error'}
        404:
          description: Business not found
          schema: {$ref: '#/definitions/error'}
      summary: Get a Business by its unique business reference
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /parties:
    post:
      consumes: [application/vnd.ons.party+json]
      description: Adds a new Party of type sampleUnitType or updates an existing
        Party based on the reference provided
      operationId: parties_post
      parameters:
      - description: Party to add
        in: body
        name: party
        required: false
        schema: {$ref: '#/definitions/party'}
      responses:
        200:
          description: item updated
          headers:
            ETag: {description: 'On successful update, the new ETag for the Party
                will be included as a header, e.g. "5635635636356356"', type: string}
        201:
          description: item created
          headers:
            ETag: {description: 'On successful creation, the new ETag for the Party
                will be included as a header, e.g. "5635635636356356"', type: string}
            Location: {description: Location of the newly created resource, type: string}
        400:
          description: invalid input, object invalid
          schema: {$ref: '#/definitions/error'}
        422:
          description: an existing item already exists
          schema: {$ref: '#/definitions/error'}
      summary: given a sampleUnitType B | H this adds a reporting unit of type Business
        or Household
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /parties/type/{sampleUnitType}/id/{id}:
    get:
      description: Returns a single Party
      operationId: get_party_by_id
      parameters:
      - {description: 'Sample Unit Type [ B BI I H ]', in: path, name: sampleUnitType,
        required: true, type: string}
      - {description: ID of the Party to return, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.ons.party+json]
      responses:
        200:
          description: Party representation
          headers:
            ETag: {description: 'The current ETag for the Party, e.g. "5635635636356356"',
              type: string}
          schema: {$ref: '#/definitions/party'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/error'}
        403:
          description: Forbidden - in the context of frontstage use, this response
            would indicate the Respondent does not have an ACTIVE association with
            this business
          schema: {$ref: '#/definitions/error'}
        404:
          description: Business not found
          schema: {$ref: '#/definitions/error'}
      summary: Get a Party by its UUID
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /parties/type/{sampleUnitType}/ref/{sampleUnitRef}:
    get:
      description: Returns a Party and associated parties
      operationId: get_party_by_ref
      parameters:
      - {description: 'Sample Unit Type [ B BI I H ]', in: path, name: sampleUnitType,
        required: true, type: string}
      - {description: 'Reference of the Party to return e.g. ruref for business, uprn
          for household', in: path, name: sampleUnitRef, required: true, type: string}
      produces: [application/vnd.ons.party+json]
      responses:
        200:
          description: Party representation
          headers:
            ETag: {description: 'The current ETag for the Party, e.g. "5635635636356356"',
              type: string}
          schema: {$ref: '#/definitions/party'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/error'}
        403:
          description: Forbidden - in the context of frontstage use, this response
            would indicate the Respondent does not have an ACTIVE association with
            this business
          schema: {$ref: '#/definitions/error'}
        404:
          description: Business not found
          schema: {$ref: '#/definitions/error'}
      summary: Get a Party and any associated parties by its unique reference (ruref
        for business, uprn for household)
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /respondents:
    post:
      consumes: [application/vnd.ons.respondent+json]
      description: Adds a Respondent to the system
      operationId: respondents_post
      parameters:
      - description: Respondent to add
        in: body
        name: party
        required: false
        schema: {$ref: '#/definitions/respondent'}
      responses:
        201:
          description: item created
          headers:
            Location: {description: Location of the newly created resource, type: string}
        400:
          description: invalid input, object invalid
          schema: {$ref: '#/definitions/error'}
      summary: adds a Respondent
      x-swagger-router-controller: swagger_server.controllers_local.controller
  /respondents/id/{id}:
    get:
      description: Returns a single Party
      operationId: get_respondent_by_id
      parameters:
      - {description: ID of Respondent to return, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.ons.respondent+json]
      responses:
        200:
          description: Respondent representation
          schema: {$ref: '#/definitions/respondent'}
        400:
          description: Invalid ID supplied
          schema: {$ref: '#/definitions/error'}
        404:
          description: Party not found
          schema: {$ref: '#/definitions/error'}
      summary: Get a Respondent by its Party ID
      x-swagger-router-controller: swagger_server.controllers_local.controller
schemes: [https]
swagger: '2.0'
tags:
- {description: 'Operations available to internal business roles (i.e. Respondent
    Liason, Survey Manager)', name: backstage}
- {description: Operations available to external business roles (i.e. Respondent),
  name: frontstage}
