# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.attributes import Attributes
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Party(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, sample_unit_type: str=None, reference: str=None, id: str=None, attributes: Attributes=None):
        """
        Party - a model defined in Swagger

        :param sample_unit_type: The sample_unit_type of this Party.
        :type sample_unit_type: str
        :param reference: The reference of this Party.
        :type reference: str
        :param id: The id of this Party.
        :type id: str
        :param attributes: The attributes of this Party.
        :type attributes: Attributes
        """
        self.swagger_types = {
            'sample_unit_type': str,
            'reference': str,
            'id': str,
            'attributes': Attributes
        }

        self.attribute_map = {
            'sample_unit_type': 'sampleUnitType',
            'reference': 'reference',
            'id': 'id',
            'attributes': 'attributes'
        }

        self._sample_unit_type = sample_unit_type
        self._reference = reference
        self._id = id
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt) -> 'Party':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The party of this Party.
        :rtype: Party
        """
        return deserialize_model(dikt, cls)

    @property
    def sample_unit_type(self) -> str:
        """
        Gets the sample_unit_type of this Party.
        Sample Unit Type [ B | H ]

        :return: The sample_unit_type of this Party.
        :rtype: str
        """
        return self._sample_unit_type

    @sample_unit_type.setter
    def sample_unit_type(self, sample_unit_type: str):
        """
        Sets the sample_unit_type of this Party.
        Sample Unit Type [ B | H ]

        :param sample_unit_type: The sample_unit_type of this Party.
        :type sample_unit_type: str
        """

        self._sample_unit_type = sample_unit_type

    @property
    def reference(self) -> str:
        """
        Gets the reference of this Party.
        The reference of the sample unit ( <RUREF> | <URPN> )

        :return: The reference of this Party.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference: str):
        """
        Sets the reference of this Party.
        The reference of the sample unit ( <RUREF> | <URPN> )

        :param reference: The reference of this Party.
        :type reference: str
        """

        self._reference = reference

    @property
    def id(self) -> str:
        """
        Gets the id of this Party.
        The id of the Party. This will not be required when posting

        :return: The id of this Party.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """
        Sets the id of this Party.
        The id of the Party. This will not be required when posting

        :param id: The id of this Party.
        :type id: str
        """

        self._id = id

    @property
    def attributes(self) -> Attributes:
        """
        Gets the attributes of this Party.

        :return: The attributes of this Party.
        :rtype: Attributes
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: Attributes):
        """
        Sets the attributes of this Party.

        :param attributes: The attributes of this Party.
        :type attributes: Attributes
        """

        self._attributes = attributes

