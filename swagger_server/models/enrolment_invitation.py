# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class EnrolmentInvitation(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, target_email: str=None, effective_from: datetime=None, effective_to: datetime=None):
        """
        EnrolmentInvitation - a model defined in Swagger

        :param target_email: The target_email of this EnrolmentInvitation.
        :type target_email: str
        :param effective_from: The effective_from of this EnrolmentInvitation.
        :type effective_from: datetime
        :param effective_to: The effective_to of this EnrolmentInvitation.
        :type effective_to: datetime
        """
        self.swagger_types = {
            'target_email': str,
            'effective_from': datetime,
            'effective_to': datetime
        }

        self.attribute_map = {
            'target_email': 'targetEmail',
            'effective_from': 'effectiveFrom',
            'effective_to': 'effectiveTo'
        }

        self._target_email = target_email
        self._effective_from = effective_from
        self._effective_to = effective_to

    @classmethod
    def from_dict(cls, dikt) -> 'EnrolmentInvitation':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The enrolmentInvitation of this EnrolmentInvitation.
        :rtype: EnrolmentInvitation
        """
        return deserialize_model(dikt, cls)

    @property
    def target_email(self) -> str:
        """
        Gets the target_email of this EnrolmentInvitation.

        :return: The target_email of this EnrolmentInvitation.
        :rtype: str
        """
        return self._target_email

    @target_email.setter
    def target_email(self, target_email: str):
        """
        Sets the target_email of this EnrolmentInvitation.

        :param target_email: The target_email of this EnrolmentInvitation.
        :type target_email: str
        """

        self._target_email = target_email

    @property
    def effective_from(self) -> datetime:
        """
        Gets the effective_from of this EnrolmentInvitation.

        :return: The effective_from of this EnrolmentInvitation.
        :rtype: datetime
        """
        return self._effective_from

    @effective_from.setter
    def effective_from(self, effective_from: datetime):
        """
        Sets the effective_from of this EnrolmentInvitation.

        :param effective_from: The effective_from of this EnrolmentInvitation.
        :type effective_from: datetime
        """

        self._effective_from = effective_from

    @property
    def effective_to(self) -> datetime:
        """
        Gets the effective_to of this EnrolmentInvitation.

        :return: The effective_to of this EnrolmentInvitation.
        :rtype: datetime
        """
        return self._effective_to

    @effective_to.setter
    def effective_to(self, effective_to: datetime):
        """
        Sets the effective_to of this EnrolmentInvitation.

        :param effective_to: The effective_to of this EnrolmentInvitation.
        :type effective_to: datetime
        """

        self._effective_to = effective_to

